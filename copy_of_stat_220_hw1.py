# -*- coding: utf-8 -*-
"""Copy of Stat_220_HW1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xGubUDE8mW95gs1DFJcaFBpYLMgt2TC4

[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/drbob-richardson/stat220/blob/main/Assignments/Stat_220_HW1.ipynb)

**Problem 1**. Give an example of a variable that is (a) categorical; (b) quantitative; (c) discrete; (d) continuous.

**Problem 2**. Analyze the Carbon_West data file using the following code.
"""

import pandas as pd
import matplotlib.pyplot as plt
carbon_west = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Carbon_West.dat")

"""Part a. Construct a histogram of CO2 emissions."""

plt.hist(carbon_west['CO2'], bins=10, edgecolor='black')
plt.title(f'Histogram of Carbon Content in the West')
plt.xlabel('Carbon Content')
plt.ylabel('Frequency')
plt.show()

"""Part b. Find the mean, median, and standard deviation."""

import numpy as np
mean_value = np.mean(carbon_west["CO2"])
median_value = np.median(carbon_west["CO2"])
std_deviation = np.std(carbon_west["CO2"])

print(f"Mean: {mean_value}")
print(f"Median: {median_value}")
print(f"Standard Deviation: {std_deviation}")

"""**Problem 3**. Read in the murder data set using the following code. The variable murder is the murder rate (per 100,000 population) for each state in the U.S. in 2017 according to the FBI Uniform Crime Reports. At first, do not use the observation for D.C. (DC)."""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
murders = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Murder.dat")
murders_without_dc = murders[murders["state"] != "DC"]
mean_value = np.mean(murders_without_dc["murder"])
std_deviation = np.std(murders_without_dc["murder"])
print(f"Mean: {mean_value}")
print(f"Standard Deviation: {std_deviation}")

"""Part a. Find the mean and standard deviation for murders without D.C."""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
murders = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Murder.dat")
murders_without_dc = murders[murders["state"] != "DC"]
mean_value = np.mean(murders_without_dc["murder"])
std_deviation = np.std(murders_without_dc["murder"])
print(f"Mean: {mean_value}")
print(f"Standard Deviation: {std_deviation}")

"""Part b. Find the five-number  summary without D.C."""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
murders_without_dc = murders[murders["state"] != "DC"]
minimum = np.min(murders_without_dc["murder"])
q1 = np.percentile(murders_without_dc["murder"], 25)
median = np.median(murders_without_dc["murder"])
q3 = np.percentile(murders_without_dc["murder"], 75)
maximum = np.max(murders_without_dc["murder"])

# Display the five-number summary
print(f"Minimum: {minimum}")
print(f"1st Quartile (Q1): {q1}")
print(f"Median (Q2): {median}")
print(f"3rd Quartile (Q3): {q3}")
print(f"Maximum: {maximum}")

"""Part c. Now include the observation for D.C. and recalculate the mean, median, and five-number summary. What is affected more by this outlier: The mean or the median? The range or the inter-quartile range?

The mean is more affected by the outlier because in the second dataset the mean is closer to the median meaning the mean is going up from the outlier.The range is more affected by the IQR because the high oulier of 24.2 greatly increases the range more than the IQR.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
murders = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Murder.dat")
mean_value = np.mean(murders["murder"])
std_deviation = np.std(murders["murder"])
murders_without_dc = murders[murders["state"] != "DC"]
minimum = np.min(murders["murder"])
q1 = np.percentile(murders["murder"], 25)
median = np.median(murders["murder"])
q3 = np.percentile(murders["murder"], 75)
maximum = np.max(murders["murder"])
print(f"Mean: {mean_value}")
print(f"Standard Deviation: {std_deviation}")
print(f"Minimum: {minimum}")
print(f"1st Quartile (Q1): {q1}")
print(f"Median (Q2): {median}")
print(f"3rd Quartile (Q3): {q3}")
print(f"Maximum: {maximum}")

"""Part c. Now include the observation for D.C. and recalculate the mean, median, and five-number summary. What is affected more by this outlier: The mean or the median? The range or the inter-quartile range?

**Problem 4**. Read in the Houses data file using the following code.  The variables include price (thousands of dollars), size (square feet), tax bill (dollars), number of bathrooms, number of bedrooms, and whether the house is new (1 = yes, 0 = no) for 100 home sales in Gainesville, Florida. Let
y = selling price and x = size of home.
"""

houses = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Houses.dat")
from sklearn.linear_model import LinearRegression

"""Part a. Construct a scatterplot between square feet and price of a home."""

houses = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Houses.dat")
plt.figure(figsize=(6, 4))
plt.scatter(houses['size'], houses['price'], alpha=0.7)
plt.title('Scatter Plot: square feet vs. price of a home')
plt.xlabel('square feet')
plt.ylabel('price of a home')

plt.show()

"""Part b. Find the correlation between the two variables."""

correlation = houses['size'].corr(houses['price'])

print(f'Correlation between size and price: {correlation}')

"""Part c. Find and plot the regression line on top of the scatterplot."""

x = houses[['size']]
y = houses['price']

# Create a LinearRegression model
model = LinearRegression()

# Fit the model to the data
model.fit(x, y)

# Retrieve the coefficient (slope) and intercept of the linear regression
slope = model.coef_[0]
intercept = model.intercept_

# Print the regression results
print(f'Slope (Coefficient): {slope}')
print(f'Intercept: {intercept}')

plt.figure(figsize=(6, 4))
plt.scatter(houses['size'], houses['price'], alpha=0.7, label='Scatterplot')
plt.plot(x, model.predict(x), color='red', label='Regression Line')
plt.title('Scatter Plot With Regression Line')
plt.xlabel('square feet')
plt.ylabel('price of a home')
plt.legend()
plt.grid(True)
plt.show()

"""Part d. Create a side by side boxplot of price comparing homes that are new and homes that are not new."""

plt.figure(figsize=(8, 6))
houses.boxplot(column='price', by='new', vert=False,grid = False)
plt.title('Side-by-Side Box Plot of prices by newness')
plt.xlabel('Price')
plt.ylabel('Not New Or New')
plt.show()

"""Part e. What is the relationship between size and price.  Justify your answer using the plots created. Do the same for the relationship between price and whether or not a house is new, again using the plot to justify your answer.

It seems
"""



"""There is a definite trend that as size increases so does price. It looks to be a strong linear relationship. For price and whether or not a house is that the new houses have a much larger range and can get much more expensvie then the older houses.

**Problem 5**. Using the Happy data file read in by the following code. Construct the contingency table relating marital status and happiness.
"""

happy = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Happy.dat")

happy = pd.read_fwf("https://stat4ds.rwth-aachen.de/data/Happy.dat")
pd.crosstab(happy["marital"],happy["happiness"])